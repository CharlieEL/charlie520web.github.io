<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://charlie520web.github.io</id>
    <title>charlieのblog</title>
    <updated>2020-06-15T11:33:45.227Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://charlie520web.github.io"/>
    <link rel="self" href="https://charlie520web.github.io/atom.xml"/>
    <subtitle>I AK IOI</subtitle>
    <logo>https://charlie520web.github.io/images/avatar.png</logo>
    <icon>https://charlie520web.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, charlieのblog</rights>
    <entry>
        <title type="html"><![CDATA[题解 P1175 【表达式的转换】]]></title>
        <id>https://charlie520web.github.io/post/ti-jie-p1175-biao-da-shi-de-zhuan-huan/</id>
        <link href="https://charlie520web.github.io/post/ti-jie-p1175-biao-da-shi-de-zhuan-huan/">
        </link>
        <updated>2020-05-30T01:26:21.000Z</updated>
        <summary type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1175">回到题目</a></p>
<p><a href="https://www.luogu.com.cn/blog/56822/solution-p1175">在洛谷blog中查看</a></p>
<p>本题基本可以分为3步：</p>
<ul>
<li>读入中缀表达式</li>
<li>中缀表达式转换为后缀表达式并输出</li>
<li>计算后缀表达式并输出过程</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1175">回到题目</a></p>
<p><a href="https://www.luogu.com.cn/blog/56822/solution-p1175">在洛谷blog中查看</a></p>
<p>本题基本可以分为3步：</p>
<ul>
<li>读入中缀表达式</li>
<li>中缀表达式转换为后缀表达式并输出</li>
<li>计算后缀表达式并输出过程</li>
</ul>
<!-- more -->
<h2 id="读入中缀表达式">读入中缀表达式。</h2>
<p>一般输入字符有三种方法：</p>
<h3 id="1-for-scanf">1. for + scanf</h3>
<p>举个例子：</p>
<details>
<summary><mark><font color=darkred>点击查看代码</font></mark></summary>
<pre><code class="language-cpp">for(int i = 0;i &lt; n;i++)
	scanf(&quot;%c&quot;,x);
</code></pre>
</details>
<p><strong>显然此题我们不知道n是多少，所以pass。</strong></p>
<h3 id="2-whilecin">2. while(cin)</h3>
<p>举个例子：</p>
<details>
<summary><mark><font color=darkred>点击查看代码</font></mark></summary>
<pre><code class="language-cpp">while(cin &gt;&gt; x) {
	//做一些事情
}
</code></pre>
</details>
<p><strong>然而这样太麻烦了，而且只是读入而已，不需要边输入边做事，果断pass。</strong></p>
<h3 id="3-string">3. string!</h3>
<p>聪慧的我发现了表达式之间没有空格。<br>
<s>(大佬早就看见了)</s><br>
于是，第三种方法脱险而出：string!</p>
<details>
<summary><mark><font color=darkred>点击查看代码</font></mark></summary>
<pre><code class="language-cpp">string s1;
cin &gt;&gt; s1;
</code></pre>
</details>
<p>直接输入字符串即可。</p>
<h2 id="中缀转后缀">中缀转后缀。</h2>
<p>主要使用的数据结构：<strong>栈</strong><br>
首先创建一个函数来回复优先级，一共3种情况</p>
<ul>
<li>+,-优先级最低，用1表示</li>
<li>其次是×,/，用2表示</li>
<li>^优先级最高，用3表示</li>
</ul>
<p>代码：</p>
<details>
<summary><mark><font color=darkred>点击查看代码</font></mark></summary>
<pre><code class="language-cpp">int p(char ch) {
	if(ch == '+' || ch == '-') return 1;
	if(ch == '*' || ch == '/') return 2;
	if(ch == '^') return 3;
	else return 0;//此处可不写，防止报错
}
</code></pre>
</details>
<p>表达式的符号共有4种类型：</p>
<ul>
<li>数字<br>
直接放入后缀表达式</li>
<li>左括号<br>
直接压入栈</li>
<li>右括号<br>
while(栈顶不为左括号) {<br>
栈顶元素放入后缀表达式；<br>
弹出栈顶元素；<br>
}<br>
弹出栈顶元素；</li>
<li>为普通运算符（+,-,×,/,^）<br>
while(栈不空&amp;&amp;栈顶运算符优先级比该运算符优先级高） {<br>
栈顶元素放入后缀表达式；<br>
弹出栈顶元素；<br>
}<br>
将该运算符压入栈；</li>
</ul>
<p>最后将栈内剩下的所有元素放入后缀表达式并弹出<br>
代码：</p>
<details>
<summary><mark><font color=darkred>点击查看代码</font></mark></summary>
<pre><code class="language-cpp">for(int i = 0;i &lt; len;i++) {
	if(s1[i] &gt;= '0' &amp;&amp; s1[i] &lt;= '9')//数字
		s2 += s1[i];
	else if(s1[i] == '(')//左括号
		st.push('(');
	else if(s1[i] == ')') {//右括号
		while(st.top() != '(') {
			s2 += st.top();
			st.pop();
		}
		st.pop();
	}
	else {//普通运算符
	while(!st.empty() &amp;&amp; p(st.top()) &gt;= p(s1[i])) {
			s2 += st.top();
			st.pop();
		}
		st.push(s1[i]);
	}
}
while(!st.empty()) {//全部弹出
	s2 += st.top();
	st.pop();
}
</code></pre>
</details>
<p><strong>切记！输出后缀表达式！用空格隔开！</strong></p>
<details>
<summary><mark><font color=darkred>点击查看代码</font></mark></summary>
<pre><code class="language-cpp">int la = s2.length();
	for(int i = 0;i &lt; la;i++)
		cout &lt;&lt; s2[i] &lt;&lt; &quot; &quot;;
	cout &lt;&lt; endl;//末尾一定有换行！
</code></pre>
</details>
<p>使用la存长度，否则会非常慢！</p>
<h2 id="计算后缀表达式并输出运算过程">计算后缀表达式并输出运算过程</h2>
<p>计算后缀表达式也使用：<strong>栈</strong><br>
一共有两种情况：</p>
<ul>
<li>数字<br>
直接压入栈。（注意要转为int类型哦！）</li>
<li>运算符<br>
取出栈顶两元素进行计算，并压入栈中<br>
首先我们建立一个函数来进行两数的计算<br>
为+ , - , × , /<br>
return a （+ , - , × , /） b；<br>
否则为^,使用(int)pow(a, b);进行计算，需要改int。<br>
代码：</li>
</ul>
<details>
<summary><mark><font color=darkred>点击查看代码</font></mark></summary>
<pre><code class="language-cpp">int numans(int a,char c,int b) {
	if(c == '+') return a + b;
	if(c == '-') return a - b;
	if(c == '*') return a * b;
	if(c == '/') return a / b;
	if(c == '^') return (int)pow(a, b);
} 
</code></pre>
</details>
<p>然后将运算过程输出出来。</p>
<ul>
<li>输出所有栈内元素</li>
<li>输出还未计算的后缀表达式</li>
</ul>
<p>代码：</p>
<details>
<summary><mark><font color=darkred>点击查看代码</font></mark></summary>
<pre><code class="language-cpp">for(int i = 0;i &lt; la;i++) {
		if(s2[i] &gt;= '0' &amp;&amp; s2[i] &lt;= '9') { 
			st2.push_back(s2[i] - '0');
		}
		else {
			int a, b;
			a = st2.back();
			st2.pop_back();
			b = st2.back();
			st2.pop_back();
			st2.push_back(numans(b,s2[i],a));
			for (list&lt;int&gt;::iterator it = st2.begin(); it != st2.end(); ++it)
                cout &lt;&lt; *it &lt;&lt; &quot; &quot;;
            
            for (int j = i + 1; j &lt; la; j ++)
                cout &lt;&lt; s2[j] &lt;&lt; &quot; &quot;;
			cout &lt;&lt; endl;
		} 
	} 
</code></pre>
</details>
<p>然后是最<s>难</s>的：</p>
<pre><code class="language-cpp">return 0;
}
</code></pre>
<p>这样，你就可以AC这道题了！</p>
<h2 id="ac-code">AC CODE</h2>
<details>
<summary><mark><font color=darkred>点击查看AC代码</font></mark></summary>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
string s1,s2;
stack&lt;char&gt; st;
list&lt;int&gt; st2;
int p(char ch) {
	if(ch == '+' || ch == '-') return 1;
	if(ch == '*' || ch == '/') return 2;
	if(ch == '^') return 3;
	else return 0;
}
int numans(int a,char c,int b) {
	if(c == '+') return a + b;
	if(c == '-') return a - b;
	if(c == '*') return a * b;
	if(c == '/') return a / b;
	if(c == '^') return (int)pow(a, b);
} 
int main() {
	cin &gt;&gt; s1;
	int len = s1.length();
	for(int i = 0;i &lt; len;i++) {
		if(s1[i] &gt;= '0' &amp;&amp; s1[i] &lt;= '9')
			s2 += s1[i];
		else if(s1[i] == '(')
			st.push('(');
		else if(s1[i] == ')') {
			while(st.top() != '(') {
				s2 += st.top();
				st.pop();
			}
			st.pop();
		}
		else {
			while(!st.empty() &amp;&amp; p(st.top()) &gt;= p(s1[i])) {
				s2 += st.top();
				st.pop();
			}
			st.push(s1[i]);
		}
	}
	while(!st.empty()) {
		s2 += st.top();
		st.pop();
	}
	int la = s2.length();
	for(int i = 0;i &lt; la;i++)
		cout &lt;&lt; s2[i] &lt;&lt; &quot; &quot;;
	cout &lt;&lt; endl;
	
	for(int i = 0;i &lt; la;i++) {
		if(s2[i] &gt;= '0' &amp;&amp; s2[i] &lt;= '9') { 
			st2.push_back(s2[i] - '0');
		}
		else {
			int a, b;
			a = st2.back();
			st2.pop_back();
			b = st2.back();
			st2.pop_back();
			st2.push_back(numans(b,s2[i],a));
			for (list&lt;int&gt;::iterator it = st2.begin(); it != st2.end(); ++it)
                cout &lt;&lt; *it &lt;&lt; &quot; &quot;;
            
            for (int j = i + 1; j &lt; la; j ++)
                cout &lt;&lt; s2[j] &lt;&lt; &quot; &quot;;
			cout &lt;&lt; endl;
		} 
	} 
	return 0;
}


</code></pre>
</details>
<p><strong>请勿复制黏贴，可以借鉴学习。</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 P1563 【玩具谜题】]]></title>
        <id>https://charlie520web.github.io/post/ti-jie-p1563-wan-ju-mi-ti/</id>
        <link href="https://charlie520web.github.io/post/ti-jie-p1563-wan-ju-mi-ti/">
        </link>
        <updated>2020-05-29T14:23:45.000Z</updated>
        <summary type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1563">回到题目</a></p>
<p><a href="https://www.luogu.com.cn/blog/56822/solution-p1563">在洛谷blog中查看</a></p>
<blockquote>
<p><code>本道题目难度</code> <em>较低</em> <code>，主要运用了</code> <em>模拟</em> <code>的算法。</code></p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1563">回到题目</a></p>
<p><a href="https://www.luogu.com.cn/blog/56822/solution-p1563">在洛谷blog中查看</a></p>
<blockquote>
<p><code>本道题目难度</code> <em>较低</em> <code>，主要运用了</code> <em>模拟</em> <code>的算法。</code></p>
</blockquote>
<!-- more -->
<h2 id="思路">思路：</h2>
<ol>
<li>输入
<ol>
<li>输入人数与命令条数</li>
<li>使用for循环输入每个人的朝向与名称</li>
</ol>
</li>
<li>模拟（循环n次）
<ol>
<li>输入第i条指令的方向与名称</li>
<li>判断是顺时针或逆时针
<ol>
<li>如果是顺时针：序号 <em><strong>--</strong></em></li>
<li>否则是逆时针：序号 <em><strong>++</strong></em></li>
</ol>
</li>
<li>判断序号是否超过限制(大于总人数或小于0)
<ol>
<li>如果小于0：序号加上总人数</li>
<li>否则大于总人数：序号减少总人数</li>
</ol>
</li>
</ol>
</li>
<li>输出：输出序号所对应的人的名称</li>
</ol>
<h2 id="伪代码">伪代码：</h2>
<details>
<summary><mark><font color=darkred>点击查看伪代码</font></mark></summary>
<pre><code class="language-c++">cin&gt;&gt;人数&gt;&gt;命令条数;
for(i = 0;i &lt; 人数 ; i++)
	cin&gt;&gt;第i个人的朝向与名称;
for(i = 0;i &lt; 命令条数 ; i++){
   cin&gt;&gt;第i条命令的方向与步数;
   if(第i个人朝外且命令方向朝右 || 第i个人朝内且命令方向朝左)
  		序号-=步数;
 	else
  		序号+=步数;
   if(序号 &gt;= 人数)
  		序号-=人数;
   else if(序号 &lt;= -1)
     序号 +=人数;
}
cout&lt;&lt;名称字符串[序号]
return 0;
</code></pre>
</details>
<p>看到这里你应该有思路了。<br>
先去试试吧(￣▽￣)ブ<br>
依然不懂？</p>
<h2 id="ac代码">AC代码：</h2>
<details>
<summary><mark><font color=darkred>点击查看AC代码</font></mark></summary>
<pre><code class="language-cpp">#include&lt;cstdio&gt;//luoguP1563 
#include&lt;iostream&gt;
#include&lt;cstring&gt;
using namespace std;
//by charlie520
int main()
{
	int m,n;//m人数，n命令
	int i,j;
	int ans = 0;//当前命令执行完后的位置 
	int ma,mb;//ma命令的朝向，0左1右 
	int a[100001];//m人的朝向，0内1外 
	string s[100001];//m人的名称
	cin&gt;&gt;m&gt;&gt;n;
	for(i = 0;i &lt; m;i++)
		cin&gt;&gt;a[i]&gt;&gt;s[i];//输入mi人的朝向与名称 
	for(i = 0;i &lt; n;i++)
	{
		cin&gt;&gt;ma&gt;&gt;mb;//输入i指令的朝向与个数
		if(a[ans] == 0 &amp;&amp; ma == 0 || a[ans] == 1 &amp;&amp; ma == 1)//朝内左或朝外右 
			ans = ans - mb;
		else//朝外左或朝内右
			ans = ans + mb;
		if(ans &gt;= m)
			ans -= m;
		else if(ans &lt;= -1)
			ans += m;
		//printf(&quot;-&gt; %d\n&quot;,ans+1);//测试，可以忽略 
	}
	cout&lt;&lt;s[ans]; 
 	return 0;
}
</code></pre>
</details>
<p><strong>请勿复制抄袭！可以借鉴学习！</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[blog更新日志]]></title>
        <id>https://charlie520web.github.io/post/blog-history/</id>
        <link href="https://charlie520web.github.io/post/blog-history/">
        </link>
        <updated>2020-05-29T14:14:21.000Z</updated>
        <summary type="html"><![CDATA[<p>此blog的更新都在这里哦~</p>
]]></summary>
        <content type="html"><![CDATA[<p>此blog的更新都在这里哦~</p>
<!-- more -->
<hr>
<h2 id="已更新">已更新</h2>
<blockquote>
<p>按时间顺序排序</p>
</blockquote>
<h3 id="2020529">2020/5/29</h3>
<p>创建blog并编写主题。</p>
<p><code>从洛谷 搬运题解 P1563 【玩具谜题】</code></p>
<h3 id="2020530">2020/5/30</h3>
<p><code>从洛谷 搬运题解 P1175 【表达式的转换】</code></p>
<hr>
<h2 id="计划更新">计划更新</h2>
<blockquote>
<p>优先级从上到下递减</p>
</blockquote>
<ol>
<li>搬luogu-blog的文章。</li>
<li>提供评论功能。</li>
<li>内网穿透。（有域名）</li>
<li>将看板娘更新为可互动聊天的。</li>
</ol>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于]]></title>
        <id>https://charlie520web.github.io/post/about/</id>
        <link href="https://charlie520web.github.io/post/about/">
        </link>
        <updated>1899-11-29T16:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>欢迎来到我的小站呀，很高兴遇见你！🤝</p>
</blockquote>
<h2 id="关于本站">🏠 关于本站</h2>
<p>这里是我的博客，欢迎点赞！</p>
<h2 id="博主是谁">👨‍💻 博主是谁</h2>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext mathvariant="monospace">charlie520</mtext></mrow><annotation encoding="application/x-tex">\texttt{charlie520}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61111em;vertical-align:0em;"></span><span class="mord text"><span class="mord texttt">charlie520</span></span></span></span></span> 大菜鸡</p>
<h2 id="兴趣爱好">⛹ 兴趣爱好</h2>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext mathvariant="monospace">coding</mtext></mrow><annotation encoding="application/x-tex">\texttt{coding}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.22222em;"></span><span class="mord text"><span class="mord texttt">coding</span></span></span></span></span>、上洛谷、<s>咕咕、瞎搞</s>……</p>
<h2 id="联系我呀">📬 联系我呀</h2>
<p>QQ：3538136822</p>
]]></content>
    </entry>
</feed>